schema {
	query: Query
}

scalar JsonType

type Query {
	# Core
	collection(name: String, filter: JsonType): JsonType
	# Singletons
	maintenanceConfigurationSingleton: MaintenanceConfiguration!
	headerConfigurationSingleton: HeaderConfiguration!
	matomoConfigurationSingleton: MatomoConfiguration!
	marketingBannerSingleton: MarketingBannger!
	livestreamConfigurationSingleton: LivestreamConfiguration!
	# Collections
	teamMembersCollection(filter: JsonType): [TeamMember]!
	eventCategoriesCollection: [EventCategory]!
	articleCategoriesCollection: [ArticleCategory]!
	articlesCollection(filter: JsonType, limit: Int, skip: Int): [Article]!
	translationsCollection(limit: Int, skip: Int): [Translation]!
	seoCollection(filter: JsonType): [Seo]!
	partnersCollection(filter: JsonType): [Partner]!
}

# Cockpit CMS

interface CockpitAssetField {
	_id: String!
}

interface CockpitField {
	_id: String!
	_created: String!
	_modified: String!
}

type CockpitAsset implements CockpitAssetField {
	_id: String!
	title: String
	path: String!
	mime: String!
	tags: [String]!
	colors: [String]!
}

# Singletons

type MarketingBannger {
	id: String!
	isEnabled: Boolean!
	message: String
	link: String
}

type MaintenanceConfiguration {
	isMaintenanceActive: Boolean!
	title: String
	description: String
}

type LivestreamConfigurationTimeline {
	date: String
	time: String
}

type LivestreamConfiguration {
	isEnabled: Boolean!
	twitchAccount: String
	streamStart: LivestreamConfigurationTimeline
	streamEnd: LivestreamConfigurationTimeline
}

type HeaderConfigurationCta {
	link: String
	title: String
}

type HeaderConfiguration @cacheControl(maxAge: 320) {
	cta: HeaderConfigurationCta
}

type MatomoConfiguration @cacheControl(maxAge: 2400) {
	containerId: String!
}

# Category Collections

type EventCategory @cacheControl(maxAge: 2400) {
	slug: String!
	title: String!
	color: String!
}

type ArticleCategory @cacheControl(maxAge: 2400) {
	slug: String!
	title: String!
}

# Collections

enum TeamMemberActivityArea {
	building
	technology
	finance
	administration
	support
	thirdparty
	legal
	communication
}

input TeamMembersCollectionFilter {
	_id: String
	fullName: String
	primaryActivityArea: TeamMemberActivityArea
	role: String
	isFounder: Boolean
	isActive: Boolean
}

type TeamMember implements CockpitField {
	_id: String!
	_created: String!
	_modified: String!
	image: CockpitAsset
	fullName: String!
	primaryActivityArea: TeamMemberActivityArea!
	role: String
	isFounder: Boolean!
	isActive: Boolean!
	entryDate: String!
	exitDate: String
}

input ArticleFilter {
	_id: String
	category: String
	tags: [String]
}

type Article implements CockpitField {
	_id: String!
	_created: String!
	_modified: String!
	slug: String!
	title: String!
	excerpt: String!
	author: TeamMember
	readingTime: Int
	content: String
}

# Translations

type Translation implements CockpitField {
	_id: String!
	_created: String!
	_modified: String!
	key: String!
	value: String
}

# SEO

input SeoCollectionFilter {
	id: String
}

type Seo {
	id: String!
	title: String
	description: String
	keywords: [String]
	image: CockpitAsset
	crawler: String
	author: String
	previewImage: CockpitAsset
}

# Partners

enum PartnerType {
	partner
	supplier
	sponsor
}

enum PartnerLevel {
	bronze
	silver
	gold
	platinum
	diamond
}

type Partner {
	title: String!
	slug: String!
	logo: CockpitAsset
	type: PartnerType!
	level: PartnerLevel
	isActive: Boolean!
	role: String!
	homepage: String!
	since: Int!
	left: Int
}
